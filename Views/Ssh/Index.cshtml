@model WebBasedFileManager.Models.SshConnectionModel
@{
    ViewData["Title"] = "File Manager";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@1.0.0/css/bulma.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>SSH Connection</title>
    <style>
        button.is-link {
            background-color: white;
        }

            button.is-link.is-text {
                background-color: transparent;
                color: white;
                border: none;
            }
    </style>
</head>
<body>
    <div class="section-container">
        <div class="section-content">
            <section class="section">
                <center>
                    <h1 class="title is-1" id="sshText">File Manager</h1>
                    <form asp-action="Connect" method="post">
                        <div class="columns is-desktop is-multiline">
                            <div class="column is-4">
                                <div class="field">
                                    <label class="label" asp-for="Ip"></label>
                                    <div class="control">
                                        <input asp-for="Ip" class="input" type="text" placeholder="IP Address" />
                                    </div>
                                    <p class="help is-danger">@Html.ValidationMessageFor(model => model.Ip)</p>
                                </div>
                            </div>
                            <div class="column is-4">
                                <div class="field">
                                    <label class="label" asp-for="Username"></label>
                                    <div class="control">
                                        <input asp-for="Username" class="input" type="text" placeholder="Username" />
                                    </div>
                                    <p class="help is-danger">@Html.ValidationMessageFor(model => model.Username)</p>
                                </div>
                            </div>
                            <div class="column is-4">
                                <div class="field">
                                    <label class="label" asp-for="Password"></label>
                                    <div class="control">
                                        <input asp-for="Password" type="password" class="input" placeholder="Password" />
                                    </div>
                                    <p class="help is-danger">@Html.ValidationMessageFor(model => model.Password)</p>
                                </div>
                            </div>
                        </div>
                        <div class="field">
                            <div class="control">
                                <button type="submit" class="button">Connect</button>
                            </div>
                        </div>
                    </form>

                    @if (ViewBag.Files != null)
                    {
                        var files = ViewBag.Files as List<string>;
                        if (files != null && files.Count > 0)
                        {
                            <form asp-action="Delete" method="post" id="deleteForm">
                                <input type="hidden" name="currentPath" id="currentPath" value="@ViewBag.CurrentPath" />

                                <!-- Buttons placed above the table -->
                                <div class="buttons mb-4">
                                    <button type="button" id="navigateUp" class="button is-link is-outlined m-2"><i class="fa-solid fa-arrow-up"></i> &nbsp;Navigate Up</button>
                                    <button class="button is-link is-outlined m-2"> <i class="fa-solid fa-plus"></i> &nbspAdd File</button>
                                    <button class="button is-info is-outlined m-2"> <i class="fa-solid fa-arrows-up-down-left-right"></i> &nbspMove File</button>
                                    <button class="button is-warning is-outlined m-2"> <i class="fa-solid fa-file-zipper"></i> &nbspCompress File</button>
                                    <button class="button is-success is-outlined m-2"> <i class="fa-solid fa-file-zipper"></i> &nbspDecompress File</button>
                                    <button type="submit" class="button is-danger is-outlined m-2"> <i class="fa-solid fa-trash-can"></i> &nbspDelete File</button>
                                </div>

                                <table class="table is-fullwidth is-bordered">
                                    <thead>
                                        <tr>
                                            <th><input type="checkbox" id="selectAll"></th>
                                            <th>File Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            // Safely cast and handle files
                                            var lastFile = files.Last();
                                            var remainingFiles = files.Take(files.Count - 1);

                                            <tr>
                                                <td><input type="checkbox" class="fileCheckbox" name="items" value="@lastFile"></td>
                                                <td>
                                                    @if (!lastFile.Contains("."))
                                                    {
                                                        <form asp-action="Navigate" method="post" style="display: inline;">
                                                            <i class="fa-regular fa-folder"></i>
                                                            <input type="hidden" name="path" value="@lastFile" />
                                                            <button type="submit" class="button is-link is-text folder-button" data-folder-name="@lastFile">@lastFile</button>
                                                        </form>
                                                    }
                                                    else
                                                    {
                                                        @lastFile
                                                    }
                                                </td>
                                            </tr>

                                            // Display remaining files
                                            foreach (var file in remainingFiles)
                                            {
                                                var isDirectory = !file.Contains(".");

                                                <tr>
                                                    <td><input type="checkbox" class="fileCheckbox" name="items" value="@file"></td>
                                                    <td>
                                                        @if (isDirectory)
                                                        {
                                                            <form asp-action="Navigate" method="post" style="display: inline;">
                                                                <i class="fa-regular fa-folder"></i>
                                                                <input type="hidden" name="path" value="@file" />
                                                                <button type="submit" class="button is-link is-text folder-button" data-folder-name="@file">@file</button>
                                                            </form>
                                                        }
                                                        else
                                                        {
                                                            <i class="fa-regular fa-file"></i>
                                                            @file
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </form>
                        }
                    }

                    @if (ViewBag.Message != null)
                    {
                        <div>@ViewBag.Message</div>
                    }
                </center>
            </section>
        </div>
    </div>

    <script>
        document.getElementById('selectAll').addEventListener('change', function () {
            var checkboxes = document.querySelectorAll('.fileCheckbox');
            checkboxes.forEach(function (checkbox) {
                checkbox.checked = this.checked;
            }, this);
        });

        document.querySelectorAll('.folder-button').forEach(function (button) {
            button.addEventListener('click', function (event) {
                // Prevent form submission for logging purpose
                event.preventDefault();
                var folderName = this.getAttribute('data-folder-name');

                // Get the current path from localStorage or default to '.'
                var currentPath = localStorage.getItem('selectedFolder') || '.';

                if (folderName === '') {
                    // If folderName is empty, reset path to '.'
                    localStorage.setItem('selectedFolder', '.');
                    this.closest('form').submit();
                } else {
                    // Update path
                    var newPath = currentPath === '.' ? `./${folderName}` : `${currentPath}/${folderName}`;
                    console.log("Folder Path:", newPath);

                    localStorage.setItem('selectedFolder', newPath);

                    this.closest('form').submit();
                }
            });
        });

        document.getElementById('navigateUp').addEventListener('click', function () {
            var currentPath = localStorage.getItem('selectedFolder') || '.';
            var newPath = currentPath.split('/').slice(0, -1).join('/') || '.';
            localStorage.setItem('selectedFolder', newPath);
            document.getElementById('currentPath').value = newPath;
            document.getElementById('deleteForm').submit();
        });

        document.getElementById('deleteForm').addEventListener('submit', function () {
            // Update the current path before submitting the delete form
            document.getElementById('currentPath').value = localStorage.getItem('selectedFolder') || '.';
        });
    </script>
</body>
</html>
